//! Values inside an Object - Json

/* Inside a Json object - JavaScript Object Notation, you can define key-value pairs. The values in
A Json object can be of multiple data types, and these values can include other Json objects,
arrays, numbers, text strings, booleans and null values. Here are examples of how to define
different types of values within a Json object. */

//* 1. **Text String Value:**

/* To assign a text string value to a key in a JSON object, enclose the string in quotes
double. */

{
   // Text String Value
      "name": "John",
      "city": "Example",
   // Numerical value
      "age": 30,
      "score": 95.5,
   // Boolean value
   "active": true,
   "onLine": false,
   // Null Value
   "last name": null,
   // Object Value
   "personal information": {
       "name": "John",
       "age": 30
   },
   // Value Array
   "colors": ["red", "green", "blue"]
  }

//* 2. **Numeric Value:**

/* To assign a numeric value to a key, simply supply the number. */

//* 3. **Boolean Value:**

/* Boolean values in Json are `true` or `false`. */

//* 4. **Null Value:**

/* To represent a null value in Json, use the `null` keyword. */


//* 5. **Nested Object:**

/* You can include another Json object as the value of a key in a Json object. */

//* 6. **Array as Value:**

/* A value in the form of a Json array is defined with square brackets and can contain multiple values. */

/* These are examples of how you can define different types of values within a Json object. Can
combine these values and nest objects and arrays as needed to represent structured data
effectively. Json is a versatile format that allows the representation of a wide range of
information in a key-value structure. */
